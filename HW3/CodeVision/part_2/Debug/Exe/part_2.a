;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;? Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 27/02/2022
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8/000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;#include <stdio.h>
;#include <string.h>
;#include <delay.h>
;// Declare your global variables here
;
;void main(void)
; 0000 0022 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0023 int i,j;
; 0000 0024 // Declare your local variables here
; 0000 0025 char tmp[20];
; 0000 0026 char src[] = "Welcome to the Microprocessor lab classes in Isfahan University of Technology.";
; 0000 0027 // Input/Output Ports initialization
; 0000 0028 // Port A initialization
; 0000 0029 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 002A DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;	i -> R16,R17
;	j -> R18,R19
;	tmp -> Y+79
;	src -> Y+0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 002B // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 002C PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002D 
; 0000 002E // Port B initialization
; 0000 002F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0030 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0031 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0032 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0033 
; 0000 0034 // Port C initialization
; 0000 0035 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0036 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0037 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0038 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0039 
; 0000 003A // Port D initialization
; 0000 003B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 003C DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 003D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 003E PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 003F 
; 0000 0040 // Alphanumeric LCD initialization
; 0000 0041 // Connections are specified in the
; 0000 0042 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0043 // RS - PORTA Bit 0
; 0000 0044 // RD - PORTA Bit 1
; 0000 0045 // EN - PORTA Bit 2
; 0000 0046 // D4 - PORTA Bit 4
; 0000 0047 // D5 - PORTA Bit 5
; 0000 0048 // D6 - PORTA Bit 6
; 0000 0049 // D7 - PORTA Bit 7
; 0000 004A // Characters/line: 16
; 0000 004B lcd_init(16);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 004C 
; 0000 004D for (i=0;i<strlen(src)-15;i++)
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 004E       {
; 0000 004F 
; 0000 0050       for (j=i;j<i+16;j++)
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0051         {
; 0000 0052             tmp[j-i] = src[j];
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0053         }
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0054       delay_ms(200);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0055       lcd_gotoxy(0,0);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0056       lcd_puts(tmp);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0057 }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0058 
; 0000 0059 
; 0000 005A while (1)
;PCODE: $00000057 VOL: 0
; 0000 005B       {
; 0000 005C          //lcd_putchar(char c)
; 0000 005D 
; 0000 005E       }
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 005F 
; 0000 0060 
; 0000 0061 }
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0

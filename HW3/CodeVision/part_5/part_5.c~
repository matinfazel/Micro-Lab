    #include <mega16.h>
#include <alcd.h>
#include <delay.h>

unsigned char key_pad[16] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F' };

int flags = 0;
int inflags = 1;
char first_digit = -1;
char sec_digit = -1;

unsigned char keypad(void){
    int key = 16;
    DDRB = 0xF0;
    PORTB = 0x0F;         
    
    //lcd_clear();
  
    do{           
        PORTB.4=1; PORTB.5=0; PORTB.6=0; PORTB.7=0;
        if(PINB.0) { key = 0;  continue;}
        if(PINB.1) {key = 1;  continue;}
        if(PINB.2) {key = 2;  continue;}
        if(PINB.3) {key =3;   continue;}                              
        delay_ms(10);
        PORTB.4=0; PORTB.5=1; PORTB.6=0; PORTB.7=0;
        if(PINB.0) {key = 4;  continue;}
        if(PINB.1) {key =  5; continue;}
        if(PINB.2) {key =  6;  continue;}
        if(PINB.3) {key =  7; continue;}                    
        delay_ms(10);
        PORTB.4=0; PORTB.5=0; PORTB.6=1; PORTB.7=0;
        if(PINB.0) {key =  8;   continue;}
        if(PINB.1) {key =  9;   continue;}
        if(PINB.2) {key =  10;   continue;}
        if(PINB.3) {key =  11; continue;}
        delay_ms(10);
        PORTB.4=0; PORTB.5=0; PORTB.6=0; PORTB.7=1;
        if(PINB.0) {key =  12;   continue;}
        if(PINB.1) {key =  13;     continue;}
        if(PINB.2) {key =  14;   continue;}
        if(PINB.3) {key =  15;   continue;}     
        delay_ms(10);
        key = 16;                 
    } while(key == 16);
    
     lcd_putchar(key_pad[key]);              
     delay_ms(200);   
     return key;


}

void func5(void){
    unsigned char dig1, dig2;
    lcd_puts("Qst5: Start ...");
    delay_ms(1000);
    lcd_clear();
                
   while(1){
        lcd_clear();                       
        lcd_puts("Speed:??(00-50r)");
        lcd_gotoxy(0,1);       
        lcd_puts("Input: ");
        dig1 = keypad();
        dig2 = keypad();
        
        if(dig1>5 || dig2>9||(dig1 == 5 && dig2 != 0)){
             lcd_gotoxy(6,0);
             lcd_putchar('E');
             lcd_gotoxy(7,0);
             lcd_putchar('E');
             lcd_gotoxy(1,0);
             delay_ms(1000);  
             lcd_clear(); 
             lcd_puts("ERROR!");
             delay_ms(1000);
        }     
        else{
             lcd_gotoxy(6,0);
             lcd_putchar(key_pad[dig1]);
             lcd_gotoxy(7,0);
             lcd_putchar(key_pad[dig2]);    
             delay_ms(1000);
             break;
        }    
        }
   while(1){
        lcd_clear();                       
        lcd_puts("Time:??(00-99s)");
        lcd_gotoxy(0,1);       
        lcd_puts("Input: ");
        dig1 = keypad();
        dig2 = keypad();
            
        if(dig1>9 || dig2>9){
             lcd_gotoxy(5,0);
             lcd_putchar('E');
             lcd_gotoxy(6,0);
             lcd_putchar('E');
             lcd_gotoxy(1,0);
             delay_ms(1000);  
             lcd_clear(); 
             lcd_puts("ERROR!");
             delay_ms(1000);
        }     
        else{
             lcd_gotoxy(5,0);
             lcd_putchar(key_pad[dig1]);
             lcd_gotoxy(6,0);
             lcd_putchar(key_pad[dig2]);    
             delay_ms(1000);
             break;
        }        
   }          
   while(1){
            lcd_clear();                       
            lcd_puts("Weigt:??(00-99F)");
            lcd_gotoxy(0,1);       
            lcd_puts("Input: ");
            dig1 = keypad();
            dig2 = keypad();
            
            if(dig1>9 || dig2>9){
                 lcd_gotoxy(6,0);
                 lcd_putchar('E');
                 lcd_gotoxy(7,0);
                 lcd_putchar('E');
                 lcd_gotoxy(1,0);
                 delay_ms(1000);  
                 lcd_clear(); 
                 lcd_puts("ERROR!");
                 delay_ms(1000);
            }     
            else{
                 lcd_gotoxy(6,0);
                 lcd_putchar(key_pad[dig1]);
                 lcd_gotoxy(7,0);
                 lcd_putchar(key_pad[dig2]);    
                 delay_ms(1000);
                 break;
            }   
        }
   while(1){
        lcd_clear();                       
        lcd_puts("Temp:??(20-80C)");
        lcd_gotoxy(0,1);       
        lcd_puts("Input: ");
        dig1 = keypad();
        dig2 = keypad();
            
        if(dig1>8 || dig1<2 || dig2>9||(dig1 == 8 && dig2 != 0)){
             lcd_gotoxy(5,0);
             lcd_putchar('E');
             lcd_gotoxy(6,0);
             lcd_putchar('E');
             lcd_gotoxy(1,0);
             delay_ms(1000);  
             lcd_clear(); 
             lcd_puts("ERROR!");
             delay_ms(1000);
        }     
        else{
             lcd_gotoxy(5,0);
             lcd_putchar(key_pad[dig1]);
             lcd_gotoxy(6,0);
             lcd_putchar(key_pad[dig2]);    
             delay_ms(1000);
             break;
        }      
        
    }
}



void main(void)
{
//char tmp;

DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);

DDRB=0xf0; // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T 
PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);

DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T 
PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);

// Port D initialization
// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In 
DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T 
PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);


GICR|=(1<<INT1) | (0<<INT0) | (0<<INT2);
MCUCR=(1<<ISC11) | (1<<ISC10) | (0<<ISC01) | (0<<ISC00);
MCUCSR=(0<<ISC2);
GIFR=(1<<INTF1) | (0<<INTF0) | (0<<INTF2);


lcd_init(16);



while (1)
      {
              func5();


      }
}


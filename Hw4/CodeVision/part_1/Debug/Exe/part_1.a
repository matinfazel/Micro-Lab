;#include <headers.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;// Declare your global variables here
;
;int ms = 0;
;int sec = 0;
;int min = 0;
;int hour = 0;
;int c = 0;
;
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 000D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000E // Place your code here
; 0000 000F interput_1();
;PCODE: $0000000F VOL: 0
; 0000 0010 
; 0000 0011 }
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0015 {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0016 interupt_0();
;PCODE: $00000015 VOL: 0
; 0000 0017 
; 0000 0018 
; 0000 0019 }
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;
;void main(void)
; 0000 001C {
;PCODE: $00000019 VOL: 0
; 0000 001D times_ports_init();
;PCODE: $0000001A VOL: 0
; 0000 001E lcd_init(16);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 001F 
; 0000 0020 // Global enable interrupts
; 0000 0021 #asm("sei")
;PCODE: $0000001D VOL: 0
	sei
;PCODE: $0000001E VOL: 0
; 0000 0022 DDRB = 0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0023 lcd_init(16);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0024 lcd_puts("00:00:00:00");
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0025 
; 0000 0026 while (1)
;PCODE: $00000026 VOL: 0
; 0000 0027       {
; 0000 0028 
; 0000 0029       }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002A }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0

	.DSEG
_0x3:
	.BYTE 0xC

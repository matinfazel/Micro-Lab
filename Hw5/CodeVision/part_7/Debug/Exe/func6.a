;#include <var6.h>
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <stdio.h>
;#include <math.h>
;void func3_6(void){
; 0003 0006 void func3_6(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0003 0007     duty_cycle = 0;
;PCODE: $0000000F VOL: 0
; 0003 0008     DDRA = 0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0003 0009     duty_cycle = PINA;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0003 000A     duty_cycle = ((duty_cycle*90)/255) + 5;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0003 000B     duty_cycle = floor((duty_cycle*255)/100);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0003 000C     OCR0 = duty_cycle;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0003 000D     lcd_gotoxy(1,0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0003 000E     lcd_puts("1");
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0003 000F }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0

	.DSEG
_0x60003:
	.BYTE 0x2
;
;void func5_6(void){
; 0003 0011 void func5_6(void){

	.CSEG
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0003 0012     if (rpm_counter<=100){
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0003 0013         if (direction == 1 ){
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0003 0014             if (temp_counter == 1) {
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0003 0015                 PORTB.4 = 1;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0003 0016                 PORTB.5 = 0;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0003 0017                 PORTB.6 = 0;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0003 0018                 PORTB.7 = 0;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0003 0019                 temp_counter ++ ;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0003 001A             }
; 0003 001B             if (temp_counter == 2) {
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0003 001C                 PORTB.4 = 0;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0003 001D                 PORTB.5 = 1;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0003 001E                 PORTB.6 = 0;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0003 001F                 PORTB.7 = 0;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0003 0020                 temp_counter ++ ;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0003 0021             }
; 0003 0022             if (temp_counter == 3) {
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0003 0023                 PORTB.4 = 0;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0003 0024                 PORTB.5 = 0;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0003 0025                 PORTB.6 = 1;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0003 0026                 PORTB.7 = 0;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0003 0027                 temp_counter ++ ;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0003 0028             }
; 0003 0029             if (temp_counter == 4) {
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0003 002A                 PORTB.4 = 0;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0003 002B                 PORTB.5 = 0;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0003 002C                 PORTB.6 = 0;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0003 002D                 PORTB.7 = 1;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0003 002E                 temp_counter ++ ;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0003 002F             }
; 0003 0030 
; 0003 0031             if (temp_counter > 4){
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0003 0032                 temp_counter=1;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0003 0033             }
; 0003 0034         }
;PCODE: $00000080 VOL: 0
; 0003 0035         rpm_counter++;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0003 0036     }
; 0003 0037 
; 0003 0038 
; 0003 0039     if (rpm_counter==100){
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0003 003A            PORTB.4 = 0;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0003 003B            PORTB.5 = 0;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0003 003C            PORTB.6 = 0;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0003 003D            PORTB.7 = 0;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0003 003E            direction=0;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0003 003F            //delay_ms(50);
; 0003 0040            rpm_counter++;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0003 0041     }
; 0003 0042 
; 0003 0043     if (rpm_counter >100 &&  rpm_counter<=200){
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0003 0044         if (direction == 0 ){
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0003 0045             if (temp_counter == 1) {
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0003 0046                 PORTB.4 = 0;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0003 0047                 PORTB.5 = 0;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0003 0048                 PORTB.6 = 0;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0003 0049                 PORTB.7 = 1;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0003 004A                 temp_counter ++ ;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0003 004B             }
; 0003 004C             if (temp_counter == 2) {
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0003 004D                 PORTB.4 = 0;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0003 004E                 PORTB.5 = 0;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0003 004F                 PORTB.6 = 1;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0003 0050                 PORTB.7 = 0;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0003 0051                 temp_counter ++ ;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0003 0052             }
; 0003 0053             if (temp_counter == 3) {
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0003 0054                 PORTB.4 = 0;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0003 0055                 PORTB.5 = 1;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0003 0056                 PORTB.6 = 0;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0003 0057                 PORTB.7 = 0;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0003 0058                 temp_counter ++ ;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0003 0059             }
; 0003 005A             if (temp_counter == 4) {
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0003 005B                 PORTB.4 = 1;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0003 005C                 PORTB.5 = 0;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0003 005D                 PORTB.6 = 0;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0003 005E                 PORTB.7 = 0;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0003 005F                 temp_counter ++ ;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0003 0060             }
; 0003 0061 
; 0003 0062             if (temp_counter > 4){
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0003 0063                 temp_counter=1;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0003 0064             }
; 0003 0065 
; 0003 0066         }
;PCODE: $000000EB VOL: 0
; 0003 0067         rpm_counter++;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0003 0068     }
; 0003 0069 
; 0003 006A     if (rpm_counter>200){
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0003 006B         rpm_counter=0;
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0003 006C         direction=1;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0003 006D     }
; 0003 006E 
; 0003 006F     speed = 1/(0.01*4)*60;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0003 0070     sprintf(temp_str, "%d", speed);
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0003 0071     lcd_gotoxy(0, 0);
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0003 0072     lcd_puts(temp_str);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0003 0073     lcd_gotoxy(6, 0);
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0003 0074     lcd_puts("rpm");
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0003 0075 }
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0

	.DSEG
_0x6005E:
	.BYTE 0x4
;
;void init_timer_ports_6(void){
; 0003 0077 void init_timer_ports_6(void){

	.CSEG
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0003 0078 
; 0003 0079    DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0003 007A     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0003 007B     PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0003 007C 
; 0003 007D     // Port B initialization
; 0003 007E     // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0003 007F     DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0003 0080     // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0003 0081     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0003 0082 
; 0003 0083     // Port C initialization
; 0003 0084     // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0003 0085     DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0003 0086     // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0003 0087     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0003 0088 
; 0003 0089     // Port D initialization
; 0003 008A     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0003 008B     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0003 008C     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0003 008D     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0003 008E 
; 0003 008F 
; 0003 0090 
; 0003 0091  TCCR0=(1<<WGM00) | (1<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0003 0092     TCNT0=0x00;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0003 0093     OCR0=0x00;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0003 0094 
; 0003 0095     // Timer/Counter 1 initialization
; 0003 0096     // Clock source: System Clock
; 0003 0097     // Clock value: Timer1 Stopped
; 0003 0098     // Mode: Normal top=0xFFFF
; 0003 0099     // OC1A output: Disconnected
; 0003 009A     // OC1B output: Disconnected
; 0003 009B     // Noise Canceler: Off
; 0003 009C     // Input Capture on Falling Edge
; 0003 009D     // Timer1 Overflow Interrupt: Off
; 0003 009E     // Input Capture Interrupt: Off
; 0003 009F     // Compare A Match Interrupt: Off
; 0003 00A0     // Compare B Match Interrupt: Off
; 0003 00A1     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0003 00A2     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0003 00A3     TCNT1H=0x00;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0003 00A4     TCNT1L=0x00;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0003 00A5     ICR1H=0x00;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0003 00A6     ICR1L=0x00;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0003 00A7     OCR1AH=0x00;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0003 00A8     OCR1AL=0x00;
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0003 00A9     OCR1BH=0x00;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0003 00AA     OCR1BL=0x00;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0003 00AB 
; 0003 00AC     // Timer/Counter 2 initialization
; 0003 00AD     // Clock source: System Clock
; 0003 00AE     // Clock value: 7.813 kHz
; 0003 00AF     // Mode: Normal top=0xFF
; 0003 00B0     // OC2 output: Disconnected
; 0003 00B1     // Timer Period: 9.984 ms
; 0003 00B2     ASSR=0<<AS2;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0003 00B3     TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (1<<CS22) | (1<<CS21) | (1<<CS20);
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0003 00B4     TCNT2=0xB2;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0003 00B5     OCR2=0x00;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0003 00B6 
; 0003 00B7     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0003 00B8     TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0003 00B9 
; 0003 00BA     // External Interrupt(s) initialization
; 0003 00BB     // INT0: Off
; 0003 00BC     // INT1: Off
; 0003 00BD     // INT2: Off
; 0003 00BE     MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0003 00BF     MCUCSR=(0<<ISC2);
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0003 00C0 
; 0003 00C1     // USART initialization
; 0003 00C2     // USART disabled
; 0003 00C3     UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0003 00C4 
; 0003 00C5     // Analog Comparator initialization
; 0003 00C6     // Analog Comparator: Off
; 0003 00C7     // The Analog Comparator's positive input is
; 0003 00C8     // connected to the AIN0 pin
; 0003 00C9     // The Analog Comparator's negative input is
; 0003 00CA     // connected to the AIN1 pin
; 0003 00CB     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0003 00CC     SFIOR=(0<<ACME);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0003 00CD 
; 0003 00CE     // ADC initialization
; 0003 00CF     // ADC disabled
; 0003 00D0     ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0003 00D1 
; 0003 00D2     // SPI initialization
; 0003 00D3     // SPI disabled
; 0003 00D4     SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0003 00D5 
; 0003 00D6     // TWI initialization
; 0003 00D7     // TWI disabled
; 0003 00D8     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0003 00D9 
; 0003 00DA 
; 0003 00DB 
; 0003 00DC 
; 0003 00DD }
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
